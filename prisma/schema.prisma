// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

model Organization {
    id                              String              @id @default(cuid())
    name                            String
    admins                          Account[]
    friends                         Friend[]
    members                         Member[]
    teams                           Team[]
    ministries                      Ministry[]
    cares                           Care[]

    createdAt                       DateTime            @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime            @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Account {
    id                              String               @id @default(cuid())
    username                        String               @unique
    name                            String?
    email                           String?
    status                          String?
    role                            String
    organization                    Organization?        @relation(fields: [organizationId], references: [id])
    organizationId                  String?
    friends                         Friend[]
    members                         Member[]
    cares                           Care[]
    sharedCares                     AccountsShareCares[]

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Friend {
    id                              String               @id @default(cuid())
    type                            String?
    name                            String?
    description                     String?
    email                           String?
    phone                           String?
    address                         String?
    gender                          String?
    hometown                        String?
    birthday                        DateTime?
    introducedBy                    String?
    curator                         Account?             @relation(fields: [curatorId], references: [id])
    curatorId                       String?
    organization                    Organization         @relation(fields: [organizationId], references: [id])
    organizationId                  String

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Member {
    id                              String               @id @default(cuid())
    faithStatus                     Int?
    name                            String
    phone                           String?
    gender                          String?
    birthday                        DateTime?
    career                          String?
    address                         String?
    email                           String?
    maritalStatus                   String?
    description                     String?
    discipleshipProcess             String?
    believeInJesusDay               DateTime?
    firstComeToLEC                  DateTime?
    introducedBy                    String?
    newLifeMentor                   String?
    memberClassDay                  DateTime?
    walkWithGodClassDay             DateTime?
    weddingDate                     DateTime?
    giveChildDay                    DateTime?
    hometown                        String?
    otherRole                       String?

    cares                           Care[]

    leadTeams                       Team[]
    leadMinistries                  Ministry[]

    teams                           TeamsMembers[]
    ministries                      MinistriesMembers[]

    organization                    Organization         @relation(fields: [organizationId], references: [id])
    organizationId                  String
    curator                         Account?             @relation(fields: [curatorId], references: [id])
    curatorId                       String?

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Team {
    id                              String               @id @default(cuid())
    name                            String
    leader                          Member?              @relation(fields: [leaderId], references: [id])
    leaderId                        String?
    members                         TeamsMembers[]
    organization                    Organization         @relation(fields: [organizationId], references: [id])
    organizationId                  String

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Ministry {
    id                              String               @id @default(cuid())
    name                            String
    leader                          Member?              @relation(fields: [leaderId], references: [id])
    leaderId                        String?
    members                         MinistriesMembers[]
    organization                    Organization         @relation(fields: [organizationId], references: [id])
    organizationId                  String

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model Care {
    id                              String               @id @default(cuid())
    description                     String?
    priority                        String
    type                            String
    imageUrl                        String?
    date                            DateTime
    curator                         Account              @relation(fields: [curatorId], references: [id])
    curatorId                       String
    member                          Member               @relation(fields: [memberId], references: [id])
    memberId                        String
    organization                    Organization         @relation(fields: [organizationId], references: [id])
    organizationId                  String
    sharedPeople                    AccountsShareCares[]

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?
}

model TeamsMembers {
    member                          Member               @relation(fields: [memberId], references: [id])
    memberId                        String
    team                            Team                 @relation(fields: [teamId], references: [id])
    teamId                          String
    role                            Int

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?

    @@id([memberId, teamId])
}

model MinistriesMembers {
    member                          Member               @relation(fields: [memberId], references: [id])
    memberId                        String
    ministry                        Ministry             @relation(fields: [ministryId], references: [id])
    ministryId                      String
    role                            Int

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?

    @@id([memberId, ministryId])
}

model AccountsShareCares {
    account                         Account              @relation(fields: [accountId], references: [id])
    accountId                       String
    care                            Care                 @relation(fields: [careId], references: [id])
    careId                          String
    access                          Int

    createdAt                       DateTime             @default(now()) @db.Timestamptz(0)
    createdBy                       String?
    updatedAt                       DateTime             @updatedAt @db.Timestamptz(0)
    updatedBy                       String?

    @@id([accountId, careId])
}